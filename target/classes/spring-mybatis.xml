<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">  
    <!-- 自动扫描 -->  
    <context:component-scan base-package="com.hh.test.dao.*" />  
    <!-- 引入配置文件一个配置文件 -->  
    <bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="location" value="classpath:jdbc.properties" />  
    </bean>  
    	<!-- 引入配置文件多个配置文件    放到这里面 controller获取不到值   -->
	<!-- <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">    
    <property name="locations">    
        <list>    
            <value>classpath:jdbc.properties</value>    
            <value>classpath:shzc.properties</value>    
        </list>                
    </property>                                
</bean>  -->
  
    <!--统一的dataSource-->
<bean id="dynamicDataSource" class="com.hh.test.db.DynamicDataSource" >
    <property name="targetDataSources">
        <map key-type="java.lang.String">
            <!--通过不同的key决定用哪个dataSource-->
            <entry value-ref="dataSource" key="dataSource"></entry>
            <entry value-ref="dataSource2" key="dataSource2"></entry>
        </map>
    </property>
    <!--设置默认的dataSource-->
    <property name="defaultTargetDataSource" ref="dataSource">
    </property>
</bean>
    
    <!--  数据源一 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  
        destroy-method="close">  
        <property name="driverClassName" value="${jdbc.driver}" />  
        <property name="url" value="${jdbc.url}" />  
        <property name="username" value="${jdbc.username}" />  
        <property name="password" value="${jdbc.password}" /> 
        <property name="validationQuery" value="SELECT 1" />
   		 <property name="testOnBorrow" value="true"/>
       <!--  <property name="initialSize" value="0"></property>  
        <property name="maxActive" value="20"></property>  
        <property name="maxIdle" value="20"></property>  
        <property name="minIdle" value="1"></property>  
        <property name="maxWait" value="60000"></property>   --> 
    </bean>  
    
    <!-- 数据源二 -->
     <bean id="dataSource2" class="org.apache.commons.dbcp.BasicDataSource"  
        destroy-method="close">  
        <property name="driverClassName" value="${jdbc.driver}" />  
        <property name="url" value="${jdbc.url2}" />  
        <property name="username" value="${jdbc.username2}" />  
        <property name="password" value="${jdbc.password2}" />
        <property name="validationQuery" value="SELECT 1" />
    	<property name="testOnBorrow" value="true"/>  
        <!-- <property name="initialSize" value="0"></property>  
        <property name="maxActive" value="20"></property>  
        <property name="maxIdle" value="20"></property>  
        <property name="minIdle" value="1"></property>  
        <property name="maxWait" value="60000"></property>   --> 
    </bean>  
    
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dynamicDataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:com/hh/test/dao/mapping/*.xml"></property>  
    </bean>  
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.hh.test.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>  
  
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dynamicDataSource" />  
    </bean>  
  
</beans>  